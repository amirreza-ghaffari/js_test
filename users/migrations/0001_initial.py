# Generated by Django 3.2 on 2022-09-05 09:54

from django.db import migrations, models
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this users has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('mobile_number', models.CharField(max_length=11, null=True, validators=[users.models.validate_phone_number])),
                ('first_name', models.CharField(max_length=256, null=True)),
                ('last_name', models.CharField(max_length=256, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('department', models.CharField(choices=[('Legal', 'Legal'), ('Risk Audit Compliance', 'RAC'), ('Human Recourse', 'HR'), ('Marketing', 'Marketing'), ('Technology', 'Tech'), ('Finance', 'Finance'), ('User Experience', 'User Experience'), ('Financial', 'Financial'), ('Business Development', 'Business Development'), ('Operation', 'Operation')], max_length=256, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this users belongs to. A users will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='users', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this users.', related_name='user_set', related_query_name='users', to='auth.Permission', verbose_name='users permissions')),
            ],
            options={
                'verbose_name': 'User',
            },
        ),
    ]
