# Generated by Django 3.2 on 2023-07-05 18:58

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('flowchart', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('mobile_number', models.CharField(max_length=11, null=True, unique=True, validators=[users.models.validate_phone_number])),
                ('first_name', models.CharField(max_length=256, null=True)),
                ('last_name', models.CharField(max_length=256, null=True)),
                ('department', models.CharField(choices=[('Legal', 'Legal'), ('Risk Audit Compliance', 'RAC'), ('Human Recourse', 'HR'), ('Marketing', 'Marketing'), ('Technology', 'Tech'), ('Finance', 'Finance'), ('User Experience', 'User Experience'), ('Financial', 'Financial'), ('Business Development', 'Business Development'), ('commercial', 'commercial'), ('security', 'security'), ('HSE', 'HSE'), ('Customer Service', 'CS'), ('Operation', 'Operation')], max_length=256)),
                ('profile_image', models.ImageField(blank=True, default=users.models.get_default_profile_image, null=True, upload_to='member_profile_images/')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=256, null=True)),
                ('last_name', models.CharField(max_length=256, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('rand_text', models.CharField(default=None, max_length=16, null=True)),
                ('profile_image', models.ImageField(blank=True, default=users.models.get_default_profile_image, max_length=255, null=True, upload_to=users.models.get_profile_image_filepath)),
                ('mobile_number', models.CharField(max_length=11, null=True, unique=True, validators=[users.models.validate_phone_number])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
            },
        ),
        migrations.CreateModel(
            name='EmailResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('flowchart', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='email_res', to='flowchart.flowchart')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_res', to='users.member')),
            ],
            options={
                'unique_together': {('member', 'message')},
            },
        ),
    ]
